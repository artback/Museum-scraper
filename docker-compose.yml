services:
  kafka:
    image: bitnami/kafka:3.9
    container_name: kafka
    volumes:
      - kafka_data:/bitnami/kafka
    ports:
      - "29092:29092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,EXTERNAL://:29092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes

  kafka-init:
    image: bitnami/kafka:3.9
    container_name: kafka-init
    depends_on:
      - kafka
    command: [ "/bin/bash", "-c", "/create_topic.sh"]
    volumes:
      - type: bind
        source: ./create_topic.sh
        target: /create_topic.sh
    env_file: .env

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    env_file: .env
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: ${KAFKA_BROKER}
    depends_on:
      - kafka

  minio-init:
    image: minio/mc:latest
    container_name: minio-init
    depends_on:
      - minio
      - kafka-init
      - kafka
    entrypoint: "/bin/sh -c "
    command:
      - "./"
    env_file: .env
    volumes:
      - type: bind
        source: ./create_event.sh
        target: /create_event.sh

  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    env_file: .env
    environment:
      MINIO_NOTIFY_KAFKA_ENABLE_1: "on"
      MINIO_NOTIFY_KAFKA_BROKERS_1: ${KAFKA_BROKER}
      MINIO_NOTIFY_KAFKA_TOPIC_1: ${KAFKA_TOPIC}
    command: server /data --console-address ":9001"
    depends_on:
      - kafka
      - kafka-init

volumes:
  minio_data:
  kafka_data:
